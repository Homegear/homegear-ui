<?xml version="1.0" encoding="utf-8"?>
<homegearDevice xmlns="https://homegear.eu/xmlNamespaces/HomegearDevice" version="1">
	<supportedDevices xmlns="https://homegear.eu/xmlNamespaces/DeviceType">
		<device id="VirtualDimmer">
			<description>VirtualDimmer</description>
			<typeNumber>0xF001</typeNumber>
		</device>
	</supportedDevices>
	<runProgram>
		<startType>permanent</startType>
		<script2>
<![CDATA[<?php
/**
 * Class to share data between the main script and the event thread.
 */
class SharedData extends Threaded
{
    public $scriptId = 0;
    public $peerId = 0;
    public $stop = false;
    public $eventThread = NULL;

    public function run() {}
}

class EventThread extends Thread
{
    private $sharedData;

	public function __construct($sharedData)
	{
		$this->sharedData = $sharedData;
	}

	public function run()
	{
		$hg = new \Homegear\Homegear();
		if($hg->registerThread($this->sharedData->scriptId) === false)
		{
			$hg->log(2, "Could not register thread.");
			return;
		}
		$hg->subscribePeer($this->sharedData->peerId);
		while(!$this->sharedData->stop)
		{
			$result = $hg->pollEvent();
			if($result["TYPE"] == "event" && $result["PEERID"] == $this->sharedData->peerId && $result["EVENTSOURCE"] && $result["EVENTSOURCE"] != 'device-'.$this->sharedData->peerId)
			{
				if($result["VARIABLE"] == 'LEVEL')
				{
					$hg->setValue($this->sharedData->peerId, 1, 'STATE', $result["VALUE"] != 0);
					$hg->setValue($this->sharedData->peerId, 1, 'LEVEL_FAST', $result["VALUE"]);
				}
				else if($result["VARIABLE"] == 'LEVEL_FAST')
				{
					$hg->setValue($this->sharedData->peerId, 1, 'STATE', $result["VALUE"] != 0);
					$hg->setValue($this->sharedData->peerId, 1, 'LEVEL', $result["VALUE"]);
				}
				else if($result["VARIABLE"] == 'STATE')
				{
					$hg->setValue($this->sharedData->peerId, 1, 'LEVEL', $result["VALUE"] ? $hg->getValue($this->sharedData->peerId, 1, 'STATE_LEVEL') : 0);					
					$hg->setValue($this->sharedData->peerId, 1, 'LEVEL_FAST', $result["VALUE"] ? $hg->getValue($this->sharedData->peerId, 1, 'STATE_LEVEL') : 0);					
				}
			}
		}
	}
}

class HomegearDevice extends HomegearDeviceBase
{
	private $hg = NULL;
	private $peerId = NULL;
	private $sharedData = NULL;
	private $eventThread = NULL;

	function __construct()
	{
		$this->hg = new \Homegear\Homegear();
	}

	function __destruct()
	{
		$this->stop();
		$this->waitForStop();
	}

	public function init($peerId) : bool
	{
		$this->peerId = $peerId;
		return true;
	}

	public function start() : bool
	{
		$this->sharedData = new SharedData();
		$this->sharedData->peerId = $this->peerId;
		$this->sharedData->scriptId = $this->hg->getScriptId();
		$this->eventThread = new EventThread($this->sharedData);
		$this->eventThread->start();
		$this->sharedData->eventThread = $this->eventThread;
		return true;
	}

	public function stop()
	{
		if($this->eventThread) $this->sharedData->stop = true;
	}

	public function waitForStop()
	{
		if($this->eventThread) $this->eventThread->join();
		$this->eventThread = NULL;
	}
}
]]>
		</script2>
	</runProgram>
	<properties/>
	<functions xmlns="https://homegear.eu/xmlNamespaces/DeviceType">
		<function xmlns="https://homegear.eu/xmlNamespaces/FunctionGroupType" channel="0" type="MAINTENANCE">
			<properties>
				<internal>true</internal>
			</properties>
			<configParameters>config</configParameters>
			<variables>maint_ch0_values</variables>
		</function>
		<function xmlns="https://homegear.eu/xmlNamespaces/FunctionGroupType" channel="1" type="VirtualDimmer">
			<variables>custom_ch1_values</variables>
		</function>
	</functions>
	<parameterGroups xmlns="https://homegear.eu/xmlNamespaces/DeviceType">
		<configParameters id="config"/>
		<variables id="maint_ch0_values">
			<parameter id="LOWBAT">
				<properties>
					<service>true</service>
				</properties>
				<logicalBoolean/>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
		</variables>
		<variables id="custom_ch1_values">
			<parameter id="LEVEL">
				<properties>
					<readable>true</readable>
					<writeable>true</writeable>
				</properties>
				<logicalInteger>
					<minimumValue>0</minimumValue>
					<maximumValue>100</maximumValue>
					<defaultValue>0</defaultValue>
				</logicalInteger>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
			<parameter id="LEVEL_FAST">
				<properties>
					<readable>true</readable>
					<writeable>true</writeable>
				</properties>
				<logicalInteger>
					<minimumValue>0</minimumValue>
					<maximumValue>100</maximumValue>
					<defaultValue>0</defaultValue>
				</logicalInteger>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
			<parameter id="DIM_SPEED">
				<properties>
					<readable>true</readable>
					<writeable>true</writeable>
				</properties>
				<logicalInteger>
					<minimumValue>0</minimumValue>
					<maximumValue>255</maximumValue>
					<defaultValue>0</defaultValue>
				</logicalInteger>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
			<parameter id="STATE_LEVEL">
				<properties>
					<readable>true</readable>
					<writeable>true</writeable>
				</properties>
				<logicalInteger>
					<minimumValue>0</minimumValue>
					<maximumValue>100</maximumValue>
					<defaultValue>0</defaultValue>
				</logicalInteger>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
			<parameter id="STATE">
				<properties>
					<readable>true</readable>
					<writeable>true</writeable>
				</properties>
				<logicalBoolean/>
				<physicalNone>
					<operationType>store</operationType>
				</physicalNone>
			</parameter>
		</variables>
	</parameterGroups>
</homegearDevice>
